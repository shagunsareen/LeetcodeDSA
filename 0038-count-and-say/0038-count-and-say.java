class Solution {
    public String countAndSay(int n) {
        if (n == 1) return "1";

        StringBuilder term = new StringBuilder("1"); //first term 
        for(int i = 2; i<=n; i++){ //generate n terms and return number generated by nth number

            //process prev term "number" one by one and generate new term "res"
            StringBuilder res = new StringBuilder();
            int count = 1;
            char curr = term.charAt(0); //first char or new term
            
            for(int j = 1; j < term.length(); j++){//traverse prev term and see count of chars
                if(term.charAt(j) == curr){
                    count++;
                }else{
                    res.append(count).append(curr); //store same chars count and start counting new one
                    curr = term.charAt(j);
                    count = 1;
                }
            }
            //if the term becomes like one with all elements as same like 111 then how will we append res since we do that only once we get distinct number so append it separately if all digits are processed
            res.append(count).append(curr);
            term = res;
        }

        return term.toString();
    }
}